{
  "$schema": "./_projects.schema.json",
  "title": "Digital Hippo",
  "description": "Plataforma de comercio electrónico para la compra y venta productos digitales. Guiado por josh tried coding",
  "priority": "primary",
  "demo": "https://digital-hippo-casa.up.railway.app/",
  "code": "https://github.com/andrescasa-dev/digital-hippo",
  "technologies": [
    {
      "category": "frontend",
      "items": [
        {
          "name": "TypeScript",
          "icon": "TypeScript"
        },
        {
          "name": "React",
          "icon": "React"
        },
        {
          "name": "NextJS app router",
          "icon": "NextJS14"
        },
        {
          "name": "Tailwind",
          "icon": "Tailwind"
        },
        {
          "name": "Html5",
          "icon": "Html"
        },
        {
          "name": "Zustand",
          "icon": "Zustand"
        },
        {
          "name": "Zod",
          "icon": "Zod"
        },
        {
          "name": "Shadcn",
          "icon": "Shadcn"
        }
      ]
    },
    {
      "category": "backend",
      "items": [
        {
          "name": "TypeScript",
          "icon": "TypeScript"
        },
        {
          "name": "Express",
          "icon": "Express"
        },
        {
          "name": "NodeJS",
          "icon": "NodeJS"
        },
        {
          "name": "TRPC",
          "icon": "TRPC"
        },
        {
          "name": "PayloadCMS",
          "icon": "PayloadCMS"
        },
        {
          "name": "Stripe",
          "icon": "Stripe"
        }
      ]
    }
  ],
  "main_features": [
    "Comprar con tarjeta de crédito usando stripe.",
    "Publicar productos digitales a la venta con un CMS personalizado.",
    "Autentificación de Usuario.",
    "Optimización del SEO.",
    "Alto rendimiento Web.",
    "Tipado de datos en Frontend y Backend con tRPC.",
    "Diseño responsivo."
  ],
  "challenges": [
    {
      "title": "Servidor web hibrido NextJS + PayloadCMS",
      "solution": "Leí la documentación de Payload y busqué información sobre Express.js para entender cómo configurarlo y cómo el servidor procesa las peticiones."
    }
  ],
  "what_i_learned": [
    "Webhooks y el ciclo de pago con stripe",
    "Creación de un backend con PayloadCMS y su debida autorización y autentificación",
    "Server components y su proceso de hidratación",
    "Uso de express para crear endpoints y usar middlewares",
    "Optimización de imágenes y Open graph para el SEO"
  ]
}